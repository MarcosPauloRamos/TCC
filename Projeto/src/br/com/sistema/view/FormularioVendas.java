/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sistema.view;

import br.com.sistema.dao.ClientesDAO;
import br.com.sistema.dao.FornecedoresDAO;
import br.com.sistema.dao.ProdutosDAO;
import br.com.sistema.model.Clientes;
import br.com.sistema.model.Fornecedores;
import br.com.sistema.model.Produtos;
import br.com.sistema.utilitarios.Utilitarios;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samsung
 */
public class FormularioVendas extends javax.swing.JFrame{   
    
    public void limparTudo() {
        Utilitarios util = new Utilitarios();
        util.LimpaTela(painel_dados);
        util.LimpaTela(painel_inserir_produto);
        txtNome.setText("");
        txtCPF.setText("");
        txtCodigo.setText("");
        txtProduto.setText("");
        txtPreco.setText("");
        txtEstoque.setText("");
        txtQtd.setText("0");
        txtTotalVenda.setText("");
        txtCodigo.setEditable(true);
        txtProduto.setEditable(true);
        txtValorDesconto.setText("0");
        total = 0;
        // Limpa a tabela de compras
        DefaultTableModel model = (DefaultTableModel) tabelaCompras.getModel();
        model.setRowCount(0);
        txtCPF.requestFocus();
    }    
    
    public void listar(){
        // Aqui esta a função que lista todos os produtos no banco de dados
        //a função esta em produtos dao com o nome listar
        //o problema desta função é que para listar tudo precisa estar limpando
        //a pesquisa e clicar em pesquisar
        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.ListarProdutos();
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for(Produtos p : lista){
            dados.addRow(new Object[]{
                p.getId(),
                p.getDescricao(),
                p.getPreco(),
                p.getQuantidade_estoque(),
                p.getFornecedor().getNome()
            });
        }
    }
    
    //Cliente é uma variavel global por usar bastante
    Clientes obj = new Clientes();
    double preco, total, subtotal;
    int quantidade;
    DefaultTableModel minhas_compras;
    
    
    public FormularioVendas() {
        initComponents();
        txtValorDesconto.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        painel_dados = new javax.swing.JPanel();
        txtCPF = new javax.swing.JFormattedTextField();
        txtNome = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JFormattedTextField();
        txtData = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        btnPesquisarCPF = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtHora = new javax.swing.JFormattedTextField();
        painel_inserir_produto = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JFormattedTextField();
        txtProduto = new javax.swing.JFormattedTextField();
        txtPreco = new javax.swing.JFormattedTextField();
        txtEstoque = new javax.swing.JFormattedTextField();
        txtQtd = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAddItem = new javax.swing.JButton();
        btnPesquisarProduto = new javax.swing.JButton();
        btnPesquisarCodigoProduto = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaCompras = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtTotalVenda = new javax.swing.JFormattedTextField();
        btnCancelar = new javax.swing.JButton();
        btnPagamento = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbFormaDeDesconto = new javax.swing.JComboBox<>();
        txtValorDesconto = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        txtItemExcluido = new javax.swing.JTextField();
        btnExcluirItem = new javax.swing.JButton();
        btnAlterarItem = new javax.swing.JButton();
        txtAlterarItem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PDV");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PDV");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        painel_dados.setBorder(javax.swing.BorderFactory.createTitledBorder("CLIENTE"));

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCPFKeyPressed(evt);
            }
        });

        txtNome.setEditable(false);
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        jLabel2.setText("CPF:");

        jLabel3.setText("NOME:");

        jLabel4.setText("DATA:");

        jLabel5.setText("SELECIONAR PRODUTO:");

        txtNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoActionPerformed(evt);
            }
        });
        txtNomeProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeProdutoKeyReleased(evt);
            }
        });

        txtData.setEditable(false);
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DESCRIÇÃO", "PREÇO", "QTD.E ", "FORNECEDOR"
            }
        ));
        tabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);

        jScrollPane2.setViewportView(jScrollPane1);

        btnPesquisarCPF.setText("PESQUISAR");
        btnPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCPFActionPerformed(evt);
            }
        });

        jLabel13.setText("Hora");

        txtHora.setEditable(false);
        txtHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_dadosLayout = new javax.swing.GroupLayout(painel_dados);
        painel_dados.setLayout(painel_dadosLayout);
        painel_dadosLayout.setHorizontalGroup(
            painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_dadosLayout.createSequentialGroup()
                .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_dadosLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeProduto))
                    .addGroup(painel_dadosLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painel_dadosLayout.createSequentialGroup()
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisarCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(0, 8, Short.MAX_VALUE))
                            .addComponent(txtNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        painel_dadosLayout.setVerticalGroup(
            painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_dadosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPesquisarCPF)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
        );

        painel_inserir_produto.setBorder(javax.swing.BorderFactory.createTitledBorder("PRODUTO"));

        jLabel6.setText("CODIGO:");

        jLabel7.setText("PRODUTO:");

        jLabel8.setText("PREÇO:");

        jLabel10.setText("QTD. EM ESTOQUE");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });

        txtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutoActionPerformed(evt);
            }
        });
        txtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdutoKeyPressed(evt);
            }
        });

        txtPreco.setEditable(false);
        txtPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoActionPerformed(evt);
            }
        });

        txtEstoque.setEditable(false);
        txtEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstoqueActionPerformed(evt);
            }
        });

        txtQtd.setText("1");
        txtQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdActionPerformed(evt);
            }
        });

        jLabel11.setText("QUANTIDADE");

        btnAddItem.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sistema/imagens/add1.png"))); // NOI18N
        btnAddItem.setText("Add Item");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        btnPesquisarProduto.setText("PESQUISAR");
        btnPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutoActionPerformed(evt);
            }
        });

        btnPesquisarCodigoProduto.setText("PESQUISAR");
        btnPesquisarCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCodigoProdutoActionPerformed(evt);
            }
        });

        btnLimpar.setText("LIMPAR");
        btnLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimparMouseClicked(evt);
            }
        });
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_inserir_produtoLayout = new javax.swing.GroupLayout(painel_inserir_produto);
        painel_inserir_produto.setLayout(painel_inserir_produtoLayout);
        painel_inserir_produtoLayout.setHorizontalGroup(
            painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                        .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_inserir_produtoLayout.createSequentialGroup()
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisarCodigoProduto))
                            .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                                .addComponent(btnPesquisarProduto)
                                .addGap(0, 131, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_inserir_produtoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnLimpar))))
                    .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                                .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddItem, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        painel_inserir_produtoLayout.setVerticalGroup(
            painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_inserir_produtoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisarCodigoProduto)))
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel_inserir_produtoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("COMPRAS"));

        tabelaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "PRODUTO", "QTD", "PREÇO", "SUBTOTAL"
            }
        ));
        tabelaCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaComprasMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tabelaCompras);

        jScrollPane3.setViewportView(jScrollPane5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("TOTAL"));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("VALOR TOTAL:");

        txtTotalVenda.setEditable(false);
        txtTotalVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalVendaActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sistema/imagens/iconfinder_download_cancel_103531.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.setActionCommand("CANCELAR ");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnPagamento.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sistema/imagens/iconfinder_Finance_loan_money_1889199.png"))); // NOI18N
        btnPagamento.setText("PAGAMENTO");
        btnPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagamentoActionPerformed(evt);
            }
        });

        jLabel9.setText("DESCONTO:");

        cbFormaDeDesconto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VALOR", "PORCENTAGEM" }));
        cbFormaDeDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaDeDescontoActionPerformed(evt);
            }
        });

        txtValorDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorDescontoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(btnPagamento)
                .addGap(34, 34, 34)
                .addComponent(btnCancelar)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbFormaDeDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtValorDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(cbFormaDeDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtValorDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel14.setText("Item:");

        txtItemExcluido.setEditable(false);
        txtItemExcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemExcluidoActionPerformed(evt);
            }
        });

        btnExcluirItem.setText("Excluir");
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });

        btnAlterarItem.setText("Alterar Quantidade");
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });

        txtAlterarItem.setEditable(false);
        txtAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlterarItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(painel_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(painel_inserir_produto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAlterarItem))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtItemExcluido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnExcluirItem)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(painel_inserir_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtItemExcluido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluirItem))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 17, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAlterarItem)
                                    .addComponent(txtAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoActionPerformed

    private void txtPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoActionPerformed

    private void txtEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueActionPerformed

    private void cbFormaDeDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaDeDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFormaDeDescontoActionPerformed

    private void txtQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdActionPerformed

    private void txtValorDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorDescontoActionPerformed

    private void btnPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutoActionPerformed
               String nome= txtProduto.getText();
               Produtos objp = new Produtos();
               ProdutosDAO dao = new ProdutosDAO();


               objp = dao.BuscarProduto(nome);

               if(objp.getDescricao()!= null){
                   txtCodigo.setText(String.valueOf(objp.getId()));
                   txtProduto.setText(objp.getDescricao());
                   txtPreco.setText(String.valueOf(objp.getPreco()));
                   txtEstoque.setText(String.valueOf(objp.getQuantidade_estoque()));
                   //esse comando proibe o usuario de modificar os dados do produto
                   //ate limpar a tela
                   //isso é necessario para bloquear inserção de produtos errados
                   //no carrinho de compras
                   txtCodigo.setEditable(false);
                    txtProduto.setEditable(false);
            }else{
                JOptionPane.showMessageDialog(null, "produto não encontrado");
            }
    }//GEN-LAST:event_btnPesquisarProdutoActionPerformed

    private void txtTotalVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalVendaActionPerformed

    private void txtCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyPressed
        //comando de pesquisa por CPF parecido ao formulario Clientes
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String cpf = txtCPF.getText();
            ClientesDAO dao = new ClientesDAO();
            
            obj = dao.BuscarClienteCPF(cpf);

            if(obj.getCpf()!= null){
                txtNome.setText(obj.getNome());
            }else{
                JOptionPane.showMessageDialog(null, "CPF invalido");
                Utilitarios util = new Utilitarios(); 
                util.LimpaTela(painel_dados);
            }
        }
    }//GEN-LAST:event_txtCPFKeyPressed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed

    }//GEN-LAST:event_txtNomeKeyPressed

    private void btnPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCPFActionPerformed
            String cpf = txtCPF.getText();
            ClientesDAO dao = new ClientesDAO();
            
            obj = dao.BuscarClienteCPF(cpf);

            if(obj.getCpf()!= null){
                txtNome.setText(obj.getNome());
            }else{
                JOptionPane.showMessageDialog(null, "CPF invalido");
                Utilitarios util = new Utilitarios(); 
                util.LimpaTela(painel_dados);
            }
    }//GEN-LAST:event_btnPesquisarCPFActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Aqui está um comando para pegar a data e hr do computador
        
        Date agora = new Date();
        SimpleDateFormat formatodata = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat formatohora = new SimpleDateFormat("HH:mm:ss");
        
        String dataformatada = formatodata.format(agora);
        String horaformatada = formatohora.format(agora);
        txtData.setText(String.valueOf(dataformatada));
        txtHora.setText(String.valueOf(horaformatada));
        
        //listar todos os produtos na tela:
        listar();
    }//GEN-LAST:event_formWindowActivated

    private void txtHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraActionPerformed

    private void tabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosMouseClicked
        // parecido com a tela de prodtuos
        txtCodigo.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0).toString());
        txtProduto.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 1).toString());
        txtPreco.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 2).toString());
        txtEstoque.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 3).toString());
        txtCodigo.setEditable(false);
        txtProduto.setEditable(false);
    }//GEN-LAST:event_tabelaProdutosMouseClicked

    private void btnPesquisarCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCodigoProdutoActionPerformed
        // TODO add your handling code here:
            int codigo= Integer.valueOf(txtCodigo.getText());
               Produtos objp = new Produtos();
               ProdutosDAO dao = new ProdutosDAO();


               objp = dao.BuscarProdutoCodigo(codigo);

               if(objp.getDescricao()!= null){
                   txtCodigo.setText(String.valueOf(objp.getId()));
                   txtProduto.setText(objp.getDescricao());
                   txtPreco.setText(String.valueOf(objp.getPreco()));
                   txtEstoque.setText(String.valueOf(objp.getQuantidade_estoque()));
                    txtCodigo.setEditable(false);
                    txtProduto.setEditable(false);
            }else{
                JOptionPane.showMessageDialog(null, "produto não encontrado");
            }
    }//GEN-LAST:event_btnPesquisarCodigoProdutoActionPerformed

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        // pesquisa pelo codigo parecido com o codigo no formulario produtos
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               int codigo= Integer.valueOf(txtCodigo.getText());
               Produtos objp = new Produtos();
               ProdutosDAO dao = new ProdutosDAO();


               objp = dao.BuscarProdutoCodigo(codigo);

               if(objp.getDescricao()!= null){
                   txtCodigo.setText(String.valueOf(objp.getId()));
                   txtProduto.setText(objp.getDescricao());
                   txtPreco.setText(String.valueOf(objp.getPreco()));
                   txtEstoque.setText(String.valueOf(objp.getQuantidade_estoque()));
                    txtCodigo.setEditable(false);
                    txtProduto.setEditable(false);
            }else{
                JOptionPane.showMessageDialog(null, "produto não encontrado");
            }
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               String nome= txtProduto.getText();
               Produtos objp = new Produtos();
               ProdutosDAO dao = new ProdutosDAO();


               objp = dao.BuscarProduto(nome);

               if(objp.getDescricao()!= null){
                   txtCodigo.setText(String.valueOf(objp.getId()));
                   txtProduto.setText(objp.getDescricao());
                   txtPreco.setText(String.valueOf(objp.getPreco()));
                   txtEstoque.setText(String.valueOf(objp.getQuantidade_estoque()));
                    txtCodigo.setEditable(false);
                    txtProduto.setEditable(false);
            }else{
                JOptionPane.showMessageDialog(null, "produto não encontrado");
            }
        }
    }//GEN-LAST:event_txtProdutoKeyPressed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
                Utilitarios util = new Utilitarios(); 
                util.LimpaTela(painel_inserir_produto);
                
                txtCodigo.setEditable(true);
                txtProduto.setEditable(true);
                txtCodigo.requestFocus();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtNomeProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeProdutoKeyReleased
        String nome = "%"+txtNomeProduto.getText()+"%";
        
        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.FiltrarProdutos(nome);
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for(Produtos p : lista){
            dados.addRow(new Object[]{
                p.getId(),
                p.getDescricao(),
                p.getPreco(),
                p.getQuantidade_estoque(),
                p.getFornecedor().getNome()
            });
            txtCodigo.setEditable(false);
            txtProduto.setEditable(false);
        }
    }//GEN-LAST:event_txtNomeProdutoKeyReleased

    private void txtNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutoActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        String nome = txtProduto.getText();
        Produtos objp = new Produtos();
        ProdutosDAO daop = new ProdutosDAO();
        objp = daop.BuscarProduto(nome);

        if (objp.getDescricao() != null) {
            int estoque = Integer.parseInt(txtEstoque.getText());
             quantidade = Integer.parseInt(txtQtd.getText());
             preco = Double.parseDouble(txtPreco.getText());
             subtotal = preco * quantidade;
            if (estoque >= quantidade) {
                minhas_compras = (DefaultTableModel) tabelaCompras.getModel();
                boolean produtoExiste = false;
                for (int i = 0; i < minhas_compras.getRowCount(); i++) {
                    String codigoTabela = minhas_compras.getValueAt(i, 0).toString();
                    if (codigoTabela.equals(txtCodigo.getText())) {
                        int qtdAtual = Integer.parseInt(minhas_compras.getValueAt(i, 2).toString());
                        int novaQtd = qtdAtual + quantidade;
                        double novoSubtotal = preco * novaQtd;
                        minhas_compras.setValueAt(novaQtd, i, 2);
                        minhas_compras.setValueAt(novoSubtotal, i, 4);
                        total += subtotal;
                        txtTotalVenda.setText(String.valueOf(total));
                        produtoExiste = true;
                        break;
                    }
                }
                if (!produtoExiste) {
                    minhas_compras.addRow(new Object[]{
                        txtCodigo.getText(),
                        txtProduto.getText(),
                        txtQtd.getText(),
                        txtPreco.getText(),
                        subtotal
                    });
                    total += subtotal;
                    txtTotalVenda.setText(String.valueOf(total));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Sem a quantidade desejada \nno estoque");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Produto não encontrado no sistema");
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void tabelaComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaComprasMouseClicked
        // aqui gera o botão para excluir um produto das vendas
        txtItemExcluido.setText(tabelaCompras.getValueAt(tabelaCompras.getSelectedRow(), 0).toString());
        txtAlterarItem.setText(tabelaCompras.getValueAt(tabelaCompras.getSelectedRow(), 2).toString());
        txtAlterarItem.setEditable(true);
    }//GEN-LAST:event_tabelaComprasMouseClicked

    private void btnPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagamentoActionPerformed
        if (tabelaCompras.getRowCount() == 0 || 
            txtNome.getText().trim().isEmpty() || 
            txtCPF.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Adicione um cliente e pelo menos um item ao carrinho antes de prosseguir com o pagamento.");
            return;
        }

        // Buscar cliente
        String nome = txtNome.getText();
        String cpf = txtCPF.getText();
        obj = new Clientes();
        ClientesDAO daoc = new ClientesDAO();
        obj = daoc.BuscarCliente(nome);
        obj = daoc.BuscarClienteCPF(cpf);

        if (obj.getNome() != null && obj.getCpf() != null) {
            // CALCULAR TOTAL BRUTO (sem desconto)
            double totalBruto = 0.0;
            for (int i = 0; i < minhas_compras.getRowCount(); i++) {
                int qtd = Integer.parseInt(minhas_compras.getValueAt(i, 2).toString());
                double precoUnitario = Double.parseDouble(minhas_compras.getValueAt(i, 3).toString());
                totalBruto += precoUnitario * qtd;
            }
            //  CALCULAR DESCONTO SOBRE O TOTAL FINAL
            String tipoDesconto = cbFormaDeDesconto.getSelectedItem().toString();
            String valorDescontoTexto = txtValorDesconto.getText().trim();
            double valorDesconto = 0.0;
            double totalComDesconto = totalBruto;
            String observacaoDesconto = "";
            if (!valorDescontoTexto.isEmpty()) {
                try {
                    valorDesconto = Double.parseDouble(valorDescontoTexto);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Valor de desconto inválido.");
                    return;
                }
                if ("PORCENTAGEM".equals(tipoDesconto)) {
                    if (valorDesconto > 100) {
                        JOptionPane.showMessageDialog(null, "Desconto percentual não pode ser maior que 100%.");
                        return;
                    }
                    totalComDesconto = totalBruto - (totalBruto * valorDesconto / 100);
                    observacaoDesconto = "Desconto de " + valorDesconto + "%";
                } else if ("VALOR".equals(tipoDesconto)) {
                    if (valorDesconto > totalBruto) {
                        JOptionPane.showMessageDialog(null, "Desconto em valor não pode ser maior que o total da compra.");
                        return;
                    }
                    totalComDesconto = totalBruto - valorDesconto;
                    observacaoDesconto = String.format("Desconto de R$ %.2f", valorDesconto);
                }
            }
            // ABRE A TELA DE PAGAMENTO
            this.setEnabled(false);
            FormularioPagamento tela_pagamento = new FormularioPagamento();
            tela_pagamento.setTelaVendas(FormularioVendas.this);
            tela_pagamento.cliente = obj;
            tela_pagamento.minhas_compras = minhas_compras;
            tela_pagamento.txtTotal.setText(String.valueOf(totalComDesconto));
            tela_pagamento.txtObservacoes1.setText(observacaoDesconto);
            tela_pagamento.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    FormularioVendas.this.setEnabled(true);
                    FormularioVendas.this.toFront();
                }
                @Override
                public void windowClosed(java.awt.event.WindowEvent e) {
                    FormularioVendas.this.setEnabled(true);
                    FormularioVendas.this.toFront();
                }
            });

            tela_pagamento.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Favor selecionar algum cliente válido.");
        }
    }//GEN-LAST:event_btnPagamentoActionPerformed

    private void txtItemExcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemExcluidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemExcluidoActionPerformed

    private void txtAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlterarItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlterarItemActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed
    // Obtém o código digitado para exclusão
        String codigo_excluido = txtItemExcluido.getText(); // esse campo deve conter o código do produto
        // Pega o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) tabelaCompras.getModel();
        boolean encontrado = false;
        // Percorre a tabela
        for (int i = 0; i < model.getRowCount(); i++) {
            String codigoTabela = model.getValueAt(i, 0).toString(); // Coluna 0 = código do produto
            if (codigoTabela.equals(codigo_excluido)) {
                // Pega o subtotal da linha antes de remover
                double subtotalRemovido = Double.parseDouble(model.getValueAt(i, 4).toString());
                // Atualiza o total
                total -= subtotalRemovido;
                if (total < 0) total = 0; // por segurança
                txtTotalVenda.setText(String.valueOf(total));
                // Remove a linha
                model.removeRow(i);
                encontrado = true;
                JOptionPane.showMessageDialog(null, "Item removido com sucesso.");
                break;
            }
        }
        if (!encontrado) {
            JOptionPane.showMessageDialog(null, "Produto com esse código não encontrado na lista.");
        }
        txtItemExcluido.setText("");
        txtAlterarItem.setEditable(false);
    }//GEN-LAST:event_btnExcluirItemActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
        try {
            int novaQtd = Integer.parseInt(txtAlterarItem.getText());
            int estoque;
            String nomeProduto = null;
            String codigo = txtCodigo.getText();
            DefaultTableModel model = (DefaultTableModel) tabelaCompras.getModel();
            Produtos p = new Produtos();
            ProdutosDAO daop = new ProdutosDAO();

            //função para buscar o produto que vou mudar estoque
            for (int i = 0; i < model.getRowCount(); i++) {
                String codigoTabela = model.getValueAt(i, 0).toString(); // coluna 0 = código do produto
                if (codigoTabela.equals(codigo)) {
                    nomeProduto = model.getValueAt(i, 1).toString(); // coluna 1 = nome do produto
                    break;
                }
            }
            p = daop.BuscarProduto(nomeProduto);
            estoque = p.getQuantidade_estoque(); // pega o estoque atual do produto
            boolean encontrado = false;
            
            if (novaQtd > estoque) {
                JOptionPane.showMessageDialog(null, "Quantidade desejada maior que o estoque disponível.");
                return;
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                String codigoTabela = model.getValueAt(i, 0).toString();
                if (codigoTabela.equals(codigo)) {
                    int qtdAtual = Integer.parseInt(model.getValueAt(i, 2).toString());
                    preco = Double.parseDouble(model.getValueAt(i, 3).toString());
                    double subtotalAntigo = Double.parseDouble(model.getValueAt(i, 4).toString());
                    double novoSubtotal = novaQtd * preco;
                    // Atualiza a linha na tabela
                    model.setValueAt(novaQtd, i, 2);        // nova quantidade
                    model.setValueAt(novoSubtotal, i, 4);   // novo subtotal
                    // Atualiza o total
                    total = total - subtotalAntigo + novoSubtotal;
                    txtTotalVenda.setText(String.valueOf(total));
                    JOptionPane.showMessageDialog(null, "Item alterado com sucesso.");
                    encontrado = true;
                    break;
                }
            }
            if (!encontrado) {
                JOptionPane.showMessageDialog(null, "Produto com esse código não encontrado na lista.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Digite uma quantidade válida.");
        }
        // Limpa o campo
        txtAlterarItem.setText("");
        txtItemExcluido.setText("");
        txtAlterarItem.setEditable(false);
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limparTudo();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimparMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAlterarItem;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluirItem;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPagamento;
    private javax.swing.JButton btnPesquisarCPF;
    private javax.swing.JButton btnPesquisarCodigoProduto;
    private javax.swing.JButton btnPesquisarProduto;
    private javax.swing.JComboBox<String> cbFormaDeDesconto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel painel_dados;
    private javax.swing.JPanel painel_inserir_produto;
    private javax.swing.JTable tabelaCompras;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txtAlterarItem;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JFormattedTextField txtEstoque;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtItemExcluido;
    private javax.swing.JFormattedTextField txtNome;
    private javax.swing.JFormattedTextField txtNomeProduto;
    private javax.swing.JFormattedTextField txtPreco;
    private javax.swing.JFormattedTextField txtProduto;
    private javax.swing.JFormattedTextField txtQtd;
    private javax.swing.JFormattedTextField txtTotalVenda;
    private javax.swing.JFormattedTextField txtValorDesconto;
    // End of variables declaration//GEN-END:variables
}
